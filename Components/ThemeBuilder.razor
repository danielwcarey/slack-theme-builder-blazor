@using System.Drawing
@using slack_theme_builder_blazor.Models
@inject NavigationManager  NavigationManager
<h2>Theme Builder</h2>
<div class="theme-builder">
    <form class="color-inputs">
        <ColorInput InputLabel="Column BG" InputId="columnBG" @bind-Color=@Palette.ColumnBG />
        <ColorInput InputLabel="Menu BG Hover" InputId="menuBGHover" @bind-Color=@Palette.MenuBGHover />
        <ColorInput InputLabel="Active Item" InputId="activeItem" @bind-Color=@Palette.ActiveItem />
        <ColorInput InputLabel="Active Item Text" InputId="activeItemText" @bind-Color=@Palette.ActiveItemText />
        <ColorInput InputLabel="Hover Item" InputId="hoverItem" @bind-Color=@Palette.HoverItem />
        <ColorInput InputLabel="Text Color" InputId="textColor" @bind-Color=@Palette.TextColor />
        <ColorInput InputLabel="Active Presence" InputId="activePresence" @bind-Color=@Palette.ActivePresence />
        <ColorInput InputLabel="Mention Badge" InputId="mentionBadge" @bind-Color=@Palette.MentionBadge />
    </form>
    <div class="ui-preview-svg">
        <UIPreviewSVG Palette=@Palette/>
    </div>
    <div>
        <button @onclick='@( () => SelectPalette(ColorPalettes.Aubergine) )'>Aubergine</button>
        <button @onclick='@( () => SelectPalette(ColorPalettes.Nocturne) )'>Nocturne</button>
    </div>
</div>

<div>
    <h2>Paste These Into Slack</h2>
    <p class="slack-color-list">@Palette.Text</p>
</div>
@if (Palette.Errors.Any()) {
<div>
    <h2>Errors Parsing Url</h2>
    @foreach (string error in Palette.Errors) {
        <p>@error</p>
    }
</div>
}

@code {

    private ColorPalette _palette = new ColorPalette();

    [Parameter]
    public ColorPalette Palette {
        get => _palette;
        set {
            _palette = value;
            _palette.PropertyChanged += (obj, args) => NavigationManager.NavigateTo($@"/{_palette.UrlEncoded}");
        }
    }

    public void SelectPalette(ColorPalette palette) {
        NavigationManager.NavigateTo($@"/{palette.UrlEncoded}");
    }


}
